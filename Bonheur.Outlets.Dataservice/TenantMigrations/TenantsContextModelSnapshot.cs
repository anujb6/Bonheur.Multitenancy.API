// <auto-generated />
using System;
using Bonheur.Outlets.Dataservice.EntityData.Tenants;
using Bonheur.Outlets.Dataservice.EntityData.Tenants.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bonheur.Outlets.Dataservice.Migrations
{
    [DbContext(typeof(TenantsContext))]
    partial class TenantsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Bonheur.Outlets.Dataservice.EntityData.Tenants.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(110)
                        .HasColumnType("varchar(110)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("category", (string)null);
                });

            modelBuilder.Entity("Bonheur.Outlets.Dataservice.EntityData.Tenants.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(110)
                        .HasColumnType("varchar(110)");

                    b.Property<string>("PhoneNo")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ServiceId" }, "FK_Customer_Services_ServiceId_idx");

                    b.ToTable("customer", (string)null);
                });

            modelBuilder.Entity("Bonheur.Outlets.Dataservice.EntityData.Tenants.Models.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CategoryId" }, "FK_Services_Category_CategoryId_idx");

                    b.ToTable("services", (string)null);
                });

            modelBuilder.Entity("Bonheur.Outlets.Dataservice.EntityData.Tenants.Models.ServiceRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int?>("CustomerName")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("StaffId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("service_records", (string)null);
                });

            modelBuilder.Entity("Bonheur.Outlets.Dataservice.EntityData.Tenants.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(510)
                        .HasColumnType("varchar(510)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(110)
                        .HasColumnType("varchar(110)");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("staff", (string)null);
                });

            modelBuilder.Entity("Bonheur.Outlets.Dataservice.EntityData.Tenants.Models.Customer", b =>
                {
                    b.HasOne("Bonheur.Outlets.Dataservice.EntityData.Tenants.Models.Service", "Service")
                        .WithMany("Customers")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK_Customer_Services_ServiceId");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Bonheur.Outlets.Dataservice.EntityData.Tenants.Models.Service", b =>
                {
                    b.HasOne("Bonheur.Outlets.Dataservice.EntityData.Tenants.Models.Category", "Category")
                        .WithMany("Services")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Services_Category_CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Bonheur.Outlets.Dataservice.EntityData.Tenants.Models.Category", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Bonheur.Outlets.Dataservice.EntityData.Tenants.Models.Service", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
